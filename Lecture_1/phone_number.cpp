#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void ReadNumber(string& number) {
  cin >> number;
  if (number[0] == '+') number[1]++;
  number.erase(remove_if(number.begin(), number.end(), [] (const char& c) {return c == '-' || c == '(' || c == ')' || c == '+'; }), number.end());
  if (number.size() == 7) number = "8495" + number;
}
void PhoneNumber() {
  vector<string> s_numbers(4);
  for (auto& num : s_numbers) {
    ReadNumber(num);
  }
  for (int i = 1; i < 4; ++i) {
    if (s_numbers[0] == s_numbers[i]) cout << "YES" << '\n';
    else cout << "NO" << '\n';
  }
}

int main_pn()
{
  PhoneNumber();
  return 0;
}

/*
Телефонные номера в адресной книге мобильного телефона имеют один из следующих форматов:
+7<код><номер>, 8<код><номер>, <номер>, где <номер> — это семь цифр, а <код> — это три цифры или три цифры в круглых скобках.
Если код не указан, то считается, что он равен 495. Кроме того, в записи телефонного номера может стоять знак “-” между любыми двумя цифрами
(см. пример). На данный момент в адресной книге телефона Васи записано всего три телефонных номера, и он хочет записать туда еще один.
Но он не может понять, не записан ли уже такой номер в телефонной книге. Помогите ему!
Два телефонных номера совпадают, если у них равны коды и равны номера. Например, +7(916)0123456 и 89160123456 — это один и тот же номер.

Формат ввода
В первой строке входных данных записан номер телефона, который Вася хочет добавить в адресную книгу своего телефона.
В следующих трех строках записаны три номера телефонов, которые уже находятся в адресной книге телефона Васи.
Гарантируется, что каждая из записей соответствует одному из трех приведенных в условии форматов.

Формат вывода
Для каждого телефонного номера в адресной книге выведите YES (заглавными буквами), если он совпадает с тем телефонным номером,
который Вася хочет добавить в адресную книгу или NO (заглавными буквами) в противном случае.
*/
