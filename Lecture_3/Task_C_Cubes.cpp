#include <iostream>
#include <set>

using namespace std;

void Cubes()
{
  set<int> nums1, nums2;
  int cnt1, cnt2;
  cin >> cnt1 >> cnt2;
  while(cnt1--)
  {
    int temp;
    cin >> temp;
    nums1.insert(temp);
  }
  while(cnt2--)
  {
    int temp;
    cin >> temp;
    nums2.insert(temp);
  }
  set<int> f1 = nums1, f2 = nums2;
  nums1.merge(nums2);
  cout << nums2.size() << endl;
  for (auto c : nums2)
  {
    cout << c << ' ';
  }
  cout << endl;
  cout << f1.size() - nums2.size() << endl;
  for (auto c : f1)
  {
    if (nums2.find(c) == nums2.end())
    {
      cout << c << ' ';
    }
  }
  cout << endl;
  cout << f2.size() - nums2.size() << endl;
  for (auto c : f2)
  {
    if (nums2.find(c) == nums2.end())
    {
      cout << c << ' ';
    }
  }
  cout << endl;
}

int main_C()
{
  Cubes();
  return 0;
}

/*
Аня и Боря любят играть в разноцветные кубики, причем у каждого из них свой набор и в каждом наборе все кубики различны по цвету.
Однажды дети заинтересовались, сколько существуют цветов таких, что кубики каждого цвета присутствуют в обоих наборах.
Для этого они занумеровали все цвета случайными числами. На этом их энтузиазм иссяк, поэтому вам предлагается помочь им в оставшейся части.
Номер любого цвета — это целое число в пределах от 0 до 109.

Формат ввода
В первой строке входного файла записаны числа N и M — количество кубиков у Ани и Бори соответственно.
В следующих N строках заданы номера цветов кубиков Ани. В последних M строках номера цветов кубиков Бори.

Формат вывода
Выведите сначала количество, а затем отсортированные по возрастанию номера цветов таких, что кубики каждого цвета есть в обоих наборах,
затем количество и отсортированные по возрастанию номера остальных цветов у Ани,
потом количество и отсортированные по возрастанию номера остальных цветов у Бори.
*/
